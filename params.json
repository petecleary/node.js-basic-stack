{"name":"Node.js-basic-stack","tagline":"","body":"A basic Node.js stack\r\n==================\r\n\r\nThis stack is for starting a basic node.js site.  It is built and tested on Windows using IISNode but could equally be used as a standalone node site. \r\n\r\n##What's in it?\r\n\r\n- Web Framework\r\n- Configuration\r\n- Logging\r\n- Email\r\n- Data storage\r\n\r\n**Web Framework with Express**\r\n\r\n- [Express] (https://github.com/visionmedia/express)\r\n- [http://expressjs.com] (http://expressjs.com)\r\n\r\nI am using Vision Media's Express framework to deliver the test results to a browser.  \r\n \r\nThis is a basic stack and does not use Jade or any other templating system to return content.  You can add in any templating framework and build on this base stack.\r\n \r\n \r\n**Configuration**\r\n \r\n- [nConf] (https://github.com/flatiron/nconf)\r\n\r\nnConf is Flatiron's configuration module.  I am calling the config.json file in the root of the site to get settings for the logging, email and mongo tests.\r\n\r\n```js\r\nvar nconf = require('nconf');\r\nnconf.argv()\r\n       .env()\r\n       .file({ file: 'config.json' });\r\n```\r\n\r\n*Note: Before running the stack locally you must reset the values in the config.json file to contain your own email and mongo settings.*\r\n\r\n**Logging**\r\n \r\n - [Winston] (https://github.com/flatiron/winston) \r\n \r\nWinston is part of the flatiron node.js stack.  I am using two transports, Mongodb and Mail:\r\n\r\n```js\r\n//add winston mongo db\r\nvar WinstonMongoDb = require('winston-mongodb').MongoDB;\r\n//add winston mail\r\nvar winstonMail = require('winston-mail').Mail;\r\n```\r\n\r\nThe settings for both are managed in the config.json file.\r\n\r\nThe MongoDb transport is set to warn and error whilst the mail is only used on error. Therefore logging is done to a database and for extream errors to an email address.\r\n\r\nI am not using multiple loggers but have set the transports up under a logger so that it can be passed to other files in the application.  You can see this in the tests/email and tests/mongo files.\r\n\r\nTesting for the three Winston message types is done on the URL's\r\n- /winston for info message test\r\n- /winston/warn for warning message test\r\n- /winson/error for error message test\r\n\r\n**Email**\r\n\r\n- [Emailjs] (https://github.com/eleith/emailjs)\r\n \r\nI am using the configuration to build both the email server and the test email.\r\n\r\n```js \r\nvar server = email.server.connect(nconf.get('EmailServer'));\r\n```\r\n\r\n```js \r\nserver.send(nconf.get(\"EmailTest\"), function (err, message) \r\n```\r\n\r\nThe logger is also used to log the results.\r\n\r\n**Data Storage**\r\n\r\n- [MongoDb] (http://www.mongodb.org/)\r\n- [Native MongoDb] (https://github.com/mongodb/node-mongodb-native)\r\n- [Mongoskin] (https://github.com/kissjs/node-mongoskin)\r\n\r\nIf you don't know what Mongo DB is then you will need to go and find out at [MongoDb] (http://www.mongodb.org/), install the database and get it up and running.  I am also using the free version of [MongoVUE] (http://www.mongovue.com/) to read the collections and documents.\r\n\r\nThe tests/mongo file contains a small test to add a document to a collection using Mongoskin and read the first item in a collection.  I am using the configuration to store the connection string.\r\n\r\n```js \r\ndb.collection('Test').insert({name: \"Test Name\"}, function(err, result) {\r\n```\r\n\r\nThe logger is also used to log the results.\r\n\r\n##Installing and running\r\n\r\n**Prerequisites**\r\n\r\n- [Node.js] (http://nodejs.org/)\r\n- [MongoDb] (http://www.mongodb.org/)\r\n\r\n**Optional**\r\n\r\n- [IISnode] (https://github.com/tjanczuk/iisnode/)\r\n- [WebMatrix] (http://www.microsoft.com/web/webmatrix)\r\n- [IIS Express 7.x] (http://go.microsoft.com/?linkid=9784329)\r\n\r\n**Running Steps**\r\n\r\n- Setup GMail account to send mails to and from\r\n- Update config.json with your details\r\n- Start Mongo\r\n- Open Folder in Webmatrix\r\n- Run and test\r\n\r\n*Note: you can use /api.js/debug to debug the application in Chrome or any other webkit browser.  Remember to use ?kill to stop debugging, see [IISnode] (https://github.com/tjanczuk/iisnode/) for more details on debuging.*\r\n\r\n-----------------\r\nEnjoy, Pete.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}